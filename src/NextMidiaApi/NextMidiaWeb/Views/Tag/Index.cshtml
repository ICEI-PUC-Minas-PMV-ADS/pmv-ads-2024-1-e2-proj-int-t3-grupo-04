@using NextMidiaWeb.Domain.Entities
@using NextMidiaWeb.Models.Enums
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model NextMidiaWeb.Models.ViewModel.TagViewModel
@{
    ViewData["Title"] = Model.Tag ?? "Tags e Generos";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NextMidiaWeb</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>
<body>
    <main>
        <section>
            <div class="page-wrapper">
                <h1>
                    Tags - #@Model.Tag
                </h1>
                <div class="midia-grid-container">
                    @if (Model != null && Model.Midias.Count > 0)
                    {
                        @***************** Genero ou Tag Específica(o) *****************@
                        @if (Model.tagEspecifica)
                        {
                            <div>
                                @foreach (var midia in Model
                               .Midias
                               .OrderByDescending(md => md.MediaDeVotos)
                               .ToList())
                                {
                                    <div>
                                        <div class="midia-container">
                                            <component type="typeof(NextMidiaWeb.Views.Componentes.MidiaInfo)"
                                                       render-mode="ServerPrerendered"
                                                       param-midia="@midia"
                                                       param-idUsuario="@Html.ViewContext.HttpContext.Session.GetString("UserId")"
                                                       param-ImagemCapa="true"
                                                       param-ExibeTrailer="true" />
                                        </div>
                                        <hr />
                                        <br />
                                    </div>
                                }
                            </div>
                        }
                        @***************** Lista de Generos *****************@
                        else
                        {
                            @foreach (var genero in Enum.GetValues(typeof(eGenerosFilme)).Cast<eGenerosFilme>())
                            {
                                @if ((long)genero == (long)eGenerosFilme.Terror
                               || (long)genero == (long)eGenerosFilme.Thriller
                               || (long)genero == (long)eGenerosFilme.Documentário
                               || (long)genero == (long)eGenerosFilme.Romance
                               || (long)genero == (long)eGenerosFilme.Guerra
                               || (long)genero == (long)eGenerosFilme.Crime
                               || (long)genero == (long)eGenerosFilme.História)
                                {
                                }
                                else
                                {
                                    <div class="genero-wrapper">
                                        <button type="button" class="collapsible">#@Enum.GetName(typeof(NextMidiaWeb.Models.Enums.eGenerosFilme), (long)genero)</button>
                                        <div class="content">
                                            @foreach (var midia in Model
                                           .Midias
                                           .Where(md => md.IdsGenero.Contains(((long)genero).ToString()))
                                           .OrderByDescending(md => md.MediaDeVotos)
                                           .ToList())
                                            {
                                                <div>
                                                    <div class="midia-container">
                                                        <component type="typeof(NextMidiaWeb.Views.Componentes.MidiaInfo)"
                                                                   render-mode="ServerPrerendered"
                                                                   param-midia="@midia"
                                                                   param-idUsuario="@Html.ViewContext.HttpContext.Session.GetString("UserId")"
                                                                   param-ImagemCapa="true"
                                                                   param-ExibeTrailer="true" />
                                                    </div>
                                                    <hr />
                                                    <br />
                                                </div>

                                            }
                                        </div>
                                    </div>
                                }
                            }
                        }
                    }
                    @***************** Falha ao Preencher o Model *****************@
                    else
                    {
                        <div>
                            <component type="typeof(NextMidiaWeb.Views.Componentes.ErroCarregamentoDados)"
                                       render-mode="ServerPrerendered" />
                        </div>
                    }
        </section>
    </main>
</body>
</html>
<script>
    var coll = document.getElementsByClassName("collapsible");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }
</script>  